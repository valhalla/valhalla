set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/modules" "${CMAKE_MODULE_PATH}")

set(VALHALLA_ENABLE_HTTP @ENABLE_HTTP@)
set(VALHALLA_ENABLE_DATA_TOOLS @ENABLE_DATA_TOOLS@)

set(Protobuf_INCLUDE_DIR "@Protobuf_INCLUDE_DIR@")
set(Protobuf_LIBRARY_DEBUG "@Protobuf_LIBRARY_DEBUG@")
set(Protobuf_LIBRARY_RELEASE "@Protobuf_LIBRARY_RELEASE@")
set(Protobuf_LITE_LIBRARY_DEBUG "@Protobuf_LITE_LIBRARY_DEBUG@")
set(Protobuf_LITE_LIBRARY_RELEASE "@Protobuf_LITE_LIBRARY_RELEASE@")
set(Protobuf_PROTOC_EXECUTABLE "@Protobuf_PROTOC_EXECUTABLE@")
set(Protobuf_PROTOC_LIBRARY_DEBUG "@Protobuf_PROTOC_LIBRARY_DEBUG@")
set(Protobuf_PROTOC_LIBRARY_RELEASE "@Protobuf_PROTOC_LIBRARY_RELEASE@")
find_package(Protobuf REQUIRED)

if(VALHALLA_ENABLE_HTTP OR VALHALLA_ENABLE_DATA_TOOLS)
  set(CURL_INCLUDE_DIR "@CURL_INCLUDE_DIR@")
  set(CURL_LIBRARY_DEBUG "@CURL_LIBRARY_DEBUG@")
  set(CURL_LIBRARY_RELEASE "@CURL_LIBRARY_RELEASE@")
  find_package(CURL REQUIRED)
endif()

include("${CMAKE_CURRENT_LIST_DIR}/valhalla-targets.cmake")

set(VALHALLA_VERSION_MAJOR "@VALHALLA_VERSION_MAJOR@")
set(VALHALLA_VERSION_MINOR "@VALHALLA_VERSION_MINOR@")
set(VALHALLA_VERSION_PATCH "@VALHALLA_VERSION_PATCH@")

set(VALHALLA_VERSION "${VALHALLA_VERSION_MAJOR}")
if(NOT "${VALHALLA_VERSION_MINOR}" STREQUAL "")
  set(VALHALLA_VERSION "${VALHALLA_VERSION}.${VALHALLA_VERSION_MINOR}")
  if(NOT "${VALHALLA_VERSION_PATCH}" STREQUAL "")
    set(VALHALLA_VERSION "${VALHALLA_VERSION}.${VALHALLA_VERSION_PATCH}")
  else()
    unset(VALHALLA_VERSION_PATCH)
  endif()
else()
  unset(VALHALLA_VERSION_MINOR)
  unset(VALHALLA_VERSION_PATCH)
endif()
