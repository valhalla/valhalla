#!/usr/bin/env python3
import fnmatch
import os.path
import sys
import subprocess

CI_IGNORE_FILE='.circleci/ciignore'
CI_IGNORE_TAG='[skip ci]'
GIT_CMD=['git', 'diff', '--cached', '--name-only']
COMMIT_MSG_FILE=sys.argv[1]

if not os.path.isfile(CI_IGNORE_FILE):
  # no CI ignore rules configured, nothing to do
  sys.exit(0)

# Get list of changed files staged for commit
changed_files=subprocess.run(GIT_CMD, capture_output=True, text=True).stdout.splitlines()

# Get CI ignore rules
with open(CI_IGNORE_FILE, 'r') as f:
  CI_IGNORE_RULES = f.readlines()
CI_IGNORE_RULES = [x.strip() for x in CI_IGNORE_RULES]

ignored_files=[]
for changed_file in changed_files:
  for ignore_rule in CI_IGNORE_RULES:
    if fnmatch.fnmatch(changed_file, ignore_rule):
      ignored_files.append(changed_file)

if sorted(ignored_files) != sorted(changed_files):
  # not everything was ignored, nothing to do
  sys.exit(0)

# all files are to be ignored for CI. modify commit msg to add skip tag
with open(COMMIT_MSG_FILE, 'r') as original: orig_commit_msg = original.read()
with open(COMMIT_MSG_FILE, 'w') as modified: modified.write(CI_IGNORE_TAG + " " + orig_commit_msg)
