#include <iostream>
#include <string>
#include <vector>

#include "baldr/graphreader.h"
#include "baldr/rapidjson_utils.h"
#include "loki/worker.h"
#include "thor/worker.h"
#include <boost/property_tree/ptree.hpp>

#include "test.h"

using namespace valhalla;
using namespace valhalla::thor;
using namespace valhalla::sif;
using namespace valhalla::loki;
using namespace valhalla::baldr;
using namespace valhalla::midgard;
using namespace valhalla::tyr;

namespace {

boost::property_tree::ptree json_to_pt(const std::string& json) {
  std::stringstream ss;
  ss << json;
  boost::property_tree::ptree pt;
  rapidjson::read_json(ss, pt);
  return pt;
}

const auto config = json_to_pt(R"({
    "mjolnir":{"tile_dir":"test/data/utrecht_tiles", "concurrency": 1},
    "loki":{
      "actions":["sources_to_targets"],
      "logging":{"long_request": 100},
      "service_defaults":{"minimum_reachability": 50,"radius": 0,"search_cutoff": 35000, "node_snap_tolerance": 5, "street_side_tolerance": 5, "heading_tolerance": 60}
    },
    "thor":{
      "logging":{"long_request": 100}
    },
    "meili":{
      "grid": {
        "cache_size": 100240,
        "size": 500
      }
    },
    "service_limits": {
      "auto": {"max_distance": 5000000.0, "max_locations": 20,"max_matrix_distance": 400000.0,"max_matrix_locations": 50},
      "auto_shorter": {"max_distance": 5000000.0,"max_locations": 20,"max_matrix_distance": 400000.0,"max_matrix_locations": 50},
      "bicycle": {"max_distance": 500000.0,"max_locations": 50,"max_matrix_distance": 200000.0,"max_matrix_locations": 50},
      "bus": {"max_distance": 5000000.0,"max_locations": 50,"max_matrix_distance": 400000.0,"max_matrix_locations": 50},
      "hov": {"max_distance": 5000000.0,"max_locations": 20,"max_matrix_distance": 400000.0,"max_matrix_locations": 50},
      "taxi": {"max_distance": 5000000.0,"max_locations": 20,"max_matrix_distance": 400000.0,"max_matrix_locations": 50},
      "isochrone": {"max_contours": 4,"max_distance": 25000.0,"max_locations": 1,"max_time": 120},
      "max_avoid_locations": 50,"max_radius": 200,"max_reachability": 100,"max_alternates":2,
      "multimodal": {"max_distance": 500000.0,"max_locations": 50,"max_matrix_distance": 0.0,"max_matrix_locations": 0},
      "pedestrian": {"max_distance": 250000.0,"max_locations": 50,"max_matrix_distance": 200000.0,"max_matrix_locations": 50,"max_transit_walking_distance": 10000,"min_transit_walking_distance": 1},
      "skadi": {"max_shape": 750000,"min_resample": 10.0},
      "trace": {"max_distance": 200000.0,"max_gps_accuracy": 100.0,"max_search_radius": 100,"max_shape": 16000,"max_best_paths":4,"max_best_paths_shape":100},
      "transit": {"max_distance": 500000.0,"max_locations": 50,"max_matrix_distance": 200000.0,"max_matrix_locations": 50},
      "truck": {"max_distance": 5000000.0,"max_locations": 20,"max_matrix_distance": 400000.0,"max_matrix_locations": 50}
    }
  })");

void try_isochrone(GraphReader& reader,
                   loki_worker_t& loki_worker,
                   thor_worker_t& thor_worker,
                   const std::string& test_request,
                   const std::string& expected_json) {
  // compute the isochrone
  Api request;
  ParseApi(test_request, Options::isochrone, request);
  loki_worker.isochrones(request);
  auto response_json = thor_worker.isochrones(request);

  // Parse isochrone json responses
  rapidjson::Document response, expected_response;
  response.Parse(response_json);
  expected_response.Parse(expected_json);

  ASSERT_EQ(response, expected_response) << "Actual:   " << response_json << std::endl
                                         << "Expected: " << expected_json;
} // namespace

TEST(Isochronies, Basic) {
  // Test setup
  loki_worker_t loki_worker(config);
  thor_worker_t thor_worker(config);
  GraphReader reader(config.get_child("mjolnir"));

// Test auto isochrone with one contour
// 32bit builds fail in release mode we'll look at this separately
#if _WIN64 || __amd64__
  {
    const auto expected =
        R"({"features":[{"properties":{"fillOpacity":0.33,"color":"#bf4040","fill":"#bf4040","fillColor":"#bf4040","contour":15,"opacity":0.33,"fill-opacity":0.33},"type":"Feature","geometry":{"coordinates":[[5.064342,52.135956],[5.046322,52.130409],[5.036321,52.122616],[5.031586,52.123940],[5.035004,52.120937],[5.033321,52.119022],[5.015980,52.128281],[5.029667,52.118938],[5.025681,52.106937],[5.032321,52.115623],[5.040556,52.114174],[5.048135,52.110939],[5.053091,52.103710],[5.060321,52.101719],[5.059528,52.099728],[5.054243,52.099014],[5.058730,52.098347],[5.057240,52.096859],[5.060082,52.094696],[5.062321,52.096302],[5.063633,52.093933],[5.059526,52.090939],[5.062546,52.088715],[5.058321,52.089424],[5.046380,52.085934],[5.049027,52.082939],[5.042562,52.072701],[5.036321,52.081791],[5.034321,52.079700],[5.026321,52.079132],[5.026060,52.075935],[5.021580,52.073936],[5.025514,52.073132],[5.026585,52.069675],[5.022971,52.069290],[5.022321,52.066444],[5.018321,52.066845],[5.021797,52.064934],[5.017061,52.060680],[5.031321,52.071278],[5.032321,52.067947],[5.032852,52.070404],[5.037321,52.070534],[5.054321,52.068134],[5.057321,52.065453],[5.059321,52.067120],[5.063448,52.066063],[5.065723,52.057343],[5.068321,52.055450],[5.069960,52.058300],[5.073715,52.057938],[5.071004,52.057259],[5.069663,52.051598],[5.067322,52.053688],[5.066027,52.051937],[5.072320,52.046543],[5.093321,52.046227],[5.094088,52.048172],[5.098321,52.046165],[5.100216,52.050049],[5.107510,52.051125],[5.111447,52.050064],[5.111764,52.046379],[5.114139,52.049122],[5.114842,52.046455],[5.118321,52.046108],[5.120321,52.049107],[5.141321,52.050198],[5.142321,52.048126],[5.145163,52.052097],[5.155321,52.051182],[5.159078,52.054939],[5.155184,52.057072],[5.159891,52.059505],[5.152190,52.058807],[5.149158,52.065933],[5.152321,52.068089],[5.158979,52.064278],[5.159005,52.066620],[5.152072,52.070938],[5.161820,52.079441],[5.163098,52.091938],[5.153601,52.102940],[5.161614,52.105232],[5.154035,52.104652],[5.147321,52.116318],[5.151588,52.103672],[5.148944,52.105316],[5.147321,52.103477],[5.145321,52.109657],[5.142321,52.103588],[5.136321,52.105732],[5.132321,52.103565],[5.132320,52.106949],[5.129321,52.104454],[5.120616,52.105938],[5.129790,52.103405],[5.129321,52.099972],[5.133321,52.102631],[5.138578,52.101936],[5.139545,52.099937],[5.137045,52.096214],[5.131321,52.094543],[5.126897,52.095512],[5.127002,52.098255],[5.124137,52.094933],[5.126321,52.093586],[5.122217,52.092937],[5.124592,52.090668],[5.121321,52.089531],[5.114321,52.090794],[5.112854,52.092937],[5.121617,52.096645],[5.122504,52.101940],[5.118930,52.101551],[5.116348,52.104939],[5.120195,52.105942],[5.113321,52.106041],[5.108321,52.102650],[5.106114,52.105732],[5.101537,52.104156],[5.096853,52.105469],[5.098321,52.109344],[5.089609,52.106934],[5.086026,52.103233],[5.077321,52.105976],[5.082321,52.099487],[5.070321,52.099430],[5.068321,52.103615],[5.068321,52.100399],[5.060934,52.106941],[5.063321,52.108566],[5.066563,52.106697],[5.064803,52.111938],[5.057869,52.116940],[5.064297,52.117939],[5.056064,52.120193],[5.047824,52.117439],[5.041121,52.124741],[5.048685,52.130569],[5.064342,52.135956]],"type":"LineString"}}],"type":"FeatureCollection"})";
    const auto request =
        R"({"locations":[{"lat":52.078937,"lon":5.115321}],"costing":"auto","contours":[{"time":15}],"polygons":false,"denoise":0.2,"generalize":150})";
    try_isochrone(reader, loki_worker, thor_worker, request, expected);
  }

  {
    const auto expected =
        R"({"features":[{"properties":{"fillOpacity":0.33,"color":"#bf4040","fill":"#bf4040","fillColor":"#bf4040","contour":15,"opacity":0.33,"fill-opacity":0.33},"type":"Feature","geometry":{"coordinates":[[[5.116321,52.105946],[5.119321,52.102882],[5.120322,52.103439],[5.124597,52.102940],[5.124640,52.099258],[5.127161,52.099777],[5.128321,52.098160],[5.129322,52.098351],[5.130321,52.097252],[5.132321,52.097076],[5.133816,52.095936],[5.135463,52.096802],[5.135692,52.098938],[5.135321,52.099350],[5.133917,52.099533],[5.134036,52.101936],[5.135863,52.102398],[5.136321,52.103096],[5.137321,52.102173],[5.140009,52.102249],[5.140321,52.102646],[5.142182,52.103077],[5.143044,52.102936],[5.144815,52.101940],[5.143321,52.101620],[5.142853,52.100941],[5.144321,52.099499],[5.144877,52.099941],[5.144941,52.101318],[5.146322,52.101936],[5.146582,52.100941],[5.145765,52.099941],[5.146292,52.098938],[5.145003,52.098259],[5.145321,52.097633],[5.148612,52.097645],[5.148321,52.098625],[5.146425,52.098934],[5.150321,52.099689],[5.151321,52.098366],[5.152854,52.098404],[5.153321,52.099003],[5.153570,52.098186],[5.154470,52.097939],[5.151919,52.097340],[5.152038,52.095940],[5.151320,52.094929],[5.150813,52.095428],[5.149888,52.095375],[5.149560,52.094700],[5.147992,52.094273],[5.147461,52.092937],[5.148321,52.092609],[5.149322,52.093433],[5.150615,52.092644],[5.152066,52.094196],[5.153584,52.093204],[5.154321,52.090675],[5.153321,52.090733],[5.152321,52.091412],[5.149102,52.091160],[5.149103,52.086941],[5.149321,52.086670],[5.149634,52.086941],[5.149960,52.089302],[5.154321,52.089622],[5.155929,52.087940],[5.154740,52.087521],[5.153744,52.085941],[5.154130,52.083939],[5.153321,52.083294],[5.150321,52.083218],[5.149321,52.083256],[5.148321,52.084179],[5.147321,52.084137],[5.145982,52.082279],[5.145215,52.082047],[5.145150,52.080940],[5.146439,52.080822],[5.147788,52.082474],[5.149321,52.082699],[5.150080,52.081940],[5.149104,52.080940],[5.149321,52.079678],[5.150321,52.080616],[5.151572,52.080688],[5.152321,52.081528],[5.153649,52.081612],[5.154009,52.082249],[5.155951,52.083309],[5.156952,52.082939],[5.156321,52.080109],[5.156158,52.080776],[5.155321,52.080688],[5.154593,52.079670],[5.153321,52.079437],[5.151931,52.077938],[5.153321,52.076469],[5.155497,52.078114],[5.155553,52.075706],[5.153963,52.075294],[5.153321,52.073795],[5.152949,52.074940],[5.151321,52.076321],[5.150125,52.075134],[5.150071,52.073940],[5.149110,52.072941],[5.151321,52.070644],[5.152321,52.071529],[5.155575,52.071190],[5.155321,52.070560],[5.153321,52.070419],[5.153073,52.069687],[5.154321,52.068501],[5.155655,52.068275],[5.156877,52.066498],[5.158270,52.065941],[5.156321,52.065594],[5.154644,52.067265],[5.153322,52.067329],[5.152321,52.068291],[5.151097,52.068165],[5.148979,52.065941],[5.148862,52.063938],[5.149632,52.062626],[5.149321,52.062267],[5.148321,52.062489],[5.148044,52.061939],[5.150923,52.058540],[5.152531,52.058147],[5.152321,52.055759],[5.151751,52.057369],[5.150001,52.057621],[5.144804,52.062424],[5.144320,52.064148],[5.143850,52.062412],[5.141774,52.060940],[5.141645,52.059616],[5.139924,52.058331],[5.139321,52.056885],[5.138764,52.057384],[5.137321,52.057453],[5.136321,52.056843],[5.132933,52.056324],[5.132321,52.055824],[5.131776,52.056393],[5.128144,52.056763],[5.127514,52.059132],[5.126321,52.058228],[5.125321,52.059208],[5.123321,52.059143],[5.121321,52.057213],[5.119127,52.057133],[5.118405,52.056938],[5.118321,52.056442],[5.118137,52.056759],[5.115321,52.056599],[5.114321,52.055351],[5.112134,52.055126],[5.112014,52.052940],[5.111042,52.051659],[5.112802,52.051456],[5.113321,52.052353],[5.114969,52.050938],[5.114089,52.049942],[5.112773,52.049488],[5.112321,52.048698],[5.111725,52.050343],[5.108321,52.050465],[5.107691,52.051308],[5.104838,52.051418],[5.104332,52.050938],[5.104321,52.048115],[5.102687,52.050304],[5.096321,52.050652],[5.095878,52.051941],[5.096357,52.051979],[5.096691,52.051304],[5.100321,52.051468],[5.100925,52.052338],[5.102382,52.052879],[5.102571,52.053688],[5.103468,52.053940],[5.103473,52.054787],[5.104321,52.055038],[5.105321,52.054523],[5.106321,52.055321],[5.106464,52.056084],[5.104321,52.056179],[5.102916,52.057343],[5.102409,52.056850],[5.101321,52.056747],[5.100698,52.058315],[5.095757,52.062374],[5.094321,52.064144],[5.093321,52.062588],[5.092690,52.063309],[5.090950,52.063568],[5.090321,52.064327],[5.089052,52.064205],[5.088649,52.062939],[5.089321,52.061546],[5.087321,52.061588],[5.086707,52.062328],[5.084132,52.062748],[5.081321,52.065262],[5.075939,52.065559],[5.076115,52.068939],[5.075044,52.069660],[5.074874,52.070938],[5.076588,52.071671],[5.076694,52.072945],[5.074996,52.073616],[5.074321,52.074535],[5.071472,52.074936],[5.075322,52.075375],[5.077321,52.077114],[5.078382,52.077000],[5.078078,52.075939],[5.079075,52.075691],[5.079119,52.074734],[5.082180,52.071796],[5.084639,52.071617],[5.084621,52.072235],[5.082200,52.074940],[5.082321,52.075611],[5.082564,52.075180],[5.083568,52.075188],[5.083895,52.074512],[5.084595,52.074665],[5.084321,52.075745],[5.082973,52.076591],[5.082321,52.078281],[5.077321,52.078625],[5.076117,52.079941],[5.076321,52.080837],[5.077321,52.080555],[5.078321,52.079418],[5.080321,52.079376],[5.081655,52.079941],[5.081619,52.082233],[5.080010,52.083939],[5.080219,52.087040],[5.081321,52.087177],[5.081776,52.087936],[5.079888,52.088509],[5.078709,52.091934],[5.079321,52.092548],[5.081321,52.092617],[5.081635,52.092934],[5.079908,52.093529],[5.078758,52.094936],[5.079321,52.095577],[5.081107,52.095722],[5.081285,52.094906],[5.082514,52.094936],[5.082321,52.095543],[5.080184,52.096802],[5.079831,52.097935],[5.081321,52.097351],[5.085320,52.097561],[5.085321,52.098541],[5.082380,52.098938],[5.085321,52.099903],[5.085631,52.100941],[5.087321,52.101788],[5.088321,52.100273],[5.089322,52.100624],[5.090872,52.099934],[5.089703,52.099552],[5.089515,52.098743],[5.087989,52.098274],[5.088079,52.097694],[5.094321,52.097733],[5.095321,52.096756],[5.102321,52.096794],[5.103031,52.096649],[5.103321,52.095806],[5.103321,52.097282],[5.101321,52.097275],[5.100321,52.098278],[5.098321,52.098423],[5.095765,52.101383],[5.094526,52.101738],[5.094321,52.101425],[5.094455,52.103935],[5.098321,52.105091],[5.103321,52.105324],[5.104321,52.105068],[5.106321,52.105618],[5.108044,52.104660],[5.108321,52.102589],[5.109970,52.103939],[5.108693,52.104939],[5.109321,52.105442],[5.110542,52.105160],[5.111321,52.104382],[5.112321,52.105042],[5.114176,52.105083],[5.115321,52.104431],[5.116321,52.105946]]],"type":"Polygon"}}],"type":"FeatureCollection"})";
    const auto request =
        R"({"locations":[{"lat":52.078937,"lon":5.115321}],"costing":"bicycle","contours":[{"time":15}],"polygons":true,"denoise":0.2})";
    try_isochrone(reader, loki_worker, thor_worker, request, expected);
  }

  {
    const auto expected =
        R"({"features":[{"properties":{"fillOpacity":0.33,"color":"#bf4040","fill":"#bf4040","fillColor":"#bf4040","contour":15,"opacity":0.33,"fill-opacity":0.33},"type":"Feature","geometry":{"coordinates":[[5.116321,52.105946],[5.119321,52.102882],[5.120322,52.103439],[5.124597,52.102940],[5.124640,52.099258],[5.127161,52.099777],[5.128321,52.098160],[5.129322,52.098351],[5.130321,52.097252],[5.132321,52.097076],[5.133816,52.095936],[5.135463,52.096802],[5.135692,52.098938],[5.135321,52.099350],[5.133917,52.099533],[5.134036,52.101936],[5.135863,52.102398],[5.136321,52.103096],[5.137321,52.102173],[5.140009,52.102249],[5.140321,52.102646],[5.142182,52.103077],[5.143044,52.102936],[5.144815,52.101940],[5.143321,52.101620],[5.142853,52.100941],[5.144321,52.099499],[5.144877,52.099941],[5.144941,52.101318],[5.146322,52.101936],[5.146582,52.100941],[5.145765,52.099941],[5.146292,52.098938],[5.145003,52.098259],[5.145321,52.097633],[5.148612,52.097645],[5.148321,52.098625],[5.146425,52.098934],[5.150321,52.099689],[5.151321,52.098366],[5.152854,52.098404],[5.153321,52.099003],[5.153570,52.098186],[5.154470,52.097939],[5.151919,52.097340],[5.152038,52.095940],[5.151320,52.094929],[5.150813,52.095428],[5.149888,52.095375],[5.149560,52.094700],[5.147992,52.094273],[5.147461,52.092937],[5.148321,52.092609],[5.149322,52.093433],[5.150615,52.092644],[5.152066,52.094196],[5.153584,52.093204],[5.154321,52.090675],[5.153321,52.090733],[5.152321,52.091412],[5.149102,52.091160],[5.149103,52.086941],[5.149321,52.086670],[5.149634,52.086941],[5.149960,52.089302],[5.154321,52.089622],[5.155929,52.087940],[5.154740,52.087521],[5.153744,52.085941],[5.154130,52.083939],[5.153321,52.083294],[5.150321,52.083218],[5.149321,52.083256],[5.148321,52.084179],[5.147321,52.084137],[5.145982,52.082279],[5.145215,52.082047],[5.145150,52.080940],[5.146439,52.080822],[5.147788,52.082474],[5.149321,52.082699],[5.150080,52.081940],[5.149104,52.080940],[5.149321,52.079678],[5.150321,52.080616],[5.151572,52.080688],[5.152321,52.081528],[5.153649,52.081612],[5.154009,52.082249],[5.155951,52.083309],[5.156952,52.082939],[5.156321,52.080109],[5.156158,52.080776],[5.155321,52.080688],[5.154593,52.079670],[5.153321,52.079437],[5.151931,52.077938],[5.153321,52.076469],[5.155497,52.078114],[5.155553,52.075706],[5.153963,52.075294],[5.153321,52.073795],[5.152949,52.074940],[5.151321,52.076321],[5.150125,52.075134],[5.150071,52.073940],[5.149110,52.072941],[5.151321,52.070644],[5.152321,52.071529],[5.155575,52.071190],[5.155321,52.070560],[5.153321,52.070419],[5.153073,52.069687],[5.154321,52.068501],[5.155655,52.068275],[5.156877,52.066498],[5.158270,52.065941],[5.156321,52.065594],[5.154644,52.067265],[5.153322,52.067329],[5.152321,52.068291],[5.151097,52.068165],[5.148979,52.065941],[5.148862,52.063938],[5.149632,52.062626],[5.149321,52.062267],[5.148321,52.062489],[5.148044,52.061939],[5.150923,52.058540],[5.152531,52.058147],[5.152321,52.055759],[5.151751,52.057369],[5.150001,52.057621],[5.144804,52.062424],[5.144320,52.064148],[5.143850,52.062412],[5.141774,52.060940],[5.141645,52.059616],[5.139924,52.058331],[5.139321,52.056885],[5.138764,52.057384],[5.137321,52.057453],[5.136321,52.056843],[5.132933,52.056324],[5.132321,52.055824],[5.131776,52.056393],[5.128144,52.056763],[5.127514,52.059132],[5.126321,52.058228],[5.125321,52.059208],[5.123321,52.059143],[5.121321,52.057213],[5.119127,52.057133],[5.118405,52.056938],[5.118321,52.056442],[5.118137,52.056759],[5.115321,52.056599],[5.114321,52.055351],[5.112134,52.055126],[5.112014,52.052940],[5.111042,52.051659],[5.112802,52.051456],[5.113321,52.052353],[5.114969,52.050938],[5.114089,52.049942],[5.112773,52.049488],[5.112321,52.048698],[5.111725,52.050343],[5.108321,52.050465],[5.107691,52.051308],[5.104838,52.051418],[5.104332,52.050938],[5.104321,52.048115],[5.102687,52.050304],[5.096321,52.050652],[5.095878,52.051941],[5.096357,52.051979],[5.096691,52.051304],[5.100321,52.051468],[5.100925,52.052338],[5.102382,52.052879],[5.102571,52.053688],[5.103468,52.053940],[5.103473,52.054787],[5.104321,52.055038],[5.105321,52.054523],[5.106321,52.055321],[5.106464,52.056084],[5.104321,52.056179],[5.102916,52.057343],[5.102409,52.056850],[5.101321,52.056747],[5.100698,52.058315],[5.095757,52.062374],[5.094321,52.064144],[5.093321,52.062588],[5.092690,52.063309],[5.090950,52.063568],[5.090321,52.064327],[5.089052,52.064205],[5.088649,52.062939],[5.089321,52.061546],[5.087321,52.061588],[5.086707,52.062328],[5.084132,52.062748],[5.081321,52.065262],[5.075939,52.065559],[5.076115,52.068939],[5.075044,52.069660],[5.074874,52.070938],[5.076588,52.071671],[5.076694,52.072945],[5.074996,52.073616],[5.074321,52.074535],[5.071472,52.074936],[5.075322,52.075375],[5.077321,52.077114],[5.078382,52.077000],[5.078078,52.075939],[5.079075,52.075691],[5.079119,52.074734],[5.082180,52.071796],[5.084639,52.071617],[5.084621,52.072235],[5.082200,52.074940],[5.082321,52.075611],[5.082564,52.075180],[5.083568,52.075188],[5.083895,52.074512],[5.084595,52.074665],[5.084321,52.075745],[5.082973,52.076591],[5.082321,52.078281],[5.077321,52.078625],[5.076117,52.079941],[5.076321,52.080837],[5.077321,52.080555],[5.078321,52.079418],[5.080321,52.079376],[5.081655,52.079941],[5.081619,52.082233],[5.080010,52.083939],[5.080219,52.087040],[5.081321,52.087177],[5.081776,52.087936],[5.079888,52.088509],[5.078709,52.091934],[5.079321,52.092548],[5.081321,52.092617],[5.081635,52.092934],[5.079908,52.093529],[5.078758,52.094936],[5.079321,52.095577],[5.081107,52.095722],[5.081285,52.094906],[5.082514,52.094936],[5.082321,52.095543],[5.080184,52.096802],[5.079831,52.097935],[5.081321,52.097351],[5.085320,52.097561],[5.085321,52.098541],[5.082380,52.098938],[5.085321,52.099903],[5.085631,52.100941],[5.087321,52.101788],[5.088321,52.100273],[5.089322,52.100624],[5.090872,52.099934],[5.089703,52.099552],[5.089515,52.098743],[5.087989,52.098274],[5.088079,52.097694],[5.094321,52.097733],[5.095321,52.096756],[5.102321,52.096794],[5.103031,52.096649],[5.103321,52.095806],[5.103321,52.097282],[5.101321,52.097275],[5.100321,52.098278],[5.098321,52.098423],[5.095765,52.101383],[5.094526,52.101738],[5.094321,52.101425],[5.094455,52.103935],[5.098321,52.105091],[5.103321,52.105324],[5.104321,52.105068],[5.106321,52.105618],[5.108044,52.104660],[5.108321,52.102589],[5.109970,52.103939],[5.108693,52.104939],[5.109321,52.105442],[5.110542,52.105160],[5.111321,52.104382],[5.112321,52.105042],[5.114176,52.105083],[5.115321,52.104431],[5.116321,52.105946]],"type":"LineString"}},{"geometry":{"coordinates":[[5.115327,52.078941]],"type":"MultiPoint"},"type":"Feature","properties":{"location_index":0,"type":"snapped"}},{"geometry":{"coordinates":[5.115321,52.078938],"type":"Point"},"type":"Feature","properties":{"location_index":0,"type":"input"}}],"type":"FeatureCollection"})";
    const auto request =
        R"({"locations":[{"lat":52.078937,"lon":5.115321}],"costing":"bicycle","contours":[{"time":15}],"show_locations":true})";
    try_isochrone(reader, loki_worker, thor_worker, request, expected);
  }
#endif
}

} // namespace

int main(int argc, char* argv[]) {
  // user wants to try it
  if (argc > 1) {
    loki_worker_t loki_worker(config);
    thor_worker_t thor_worker(config);
    GraphReader reader(config.get_child("mjolnir"));
    Api request;
    ParseApi(argv[1], Options::isochrone, request);
    loki_worker.isochrones(request);
    std::cout << thor_worker.isochrones(request) << std::endl;
    return EXIT_SUCCESS;
  }
  // Silence logs (especially long request logging)
  logging::Configure({{"type", ""}});
  testing::InitGoogleTest(&argc, argv);
  return RUN_ALL_TESTS();
}
