name: Build Windows (MinGW)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: fedora:rawhide

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          dnf install -y \
            cmake \
            gcc-c++ \
            git \
            make \
            pkg-config \
            mingw64-gcc \
            mingw64-gcc-c++ \
            mingw64-curl \
            mingw64-boost \
            mingw64-protobuf \
            mingw64-geos \
            mingw64-gdal \
            mingw64-python3 \
            zlib-devel \
            lz4 \
            lz4-devel \
            protobuf-compiler

      - name: Configure CMake
        run: |
          mkdir -p build
          cd build
          cmake .. \
            -DCMAKE_SYSTEM_NAME=Windows \
            -DCMAKE_C_COMPILER=x86_64-w64-mingw32-gcc \
            -DCMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++ \
            -DENABLE_LZ4=ON \
            -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: |
          cd build
          make -j$(nproc)

      - name: Package artifacts
        if: success()
        run: |
          cd build
          tar -czf valhalla-mingw.tar.gz *
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: valhalla-mingw
          path: build/valhalla-mingw.tar.gz
