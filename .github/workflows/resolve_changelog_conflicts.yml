name: Resolve Changelog Conflicts

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  resolve_changelog_conflicts:
    name: Resolve Changelog Conflicts
    runs-on: ubuntu-latest
    if: github.repository == 'valhalla/valhalla'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Create merge commit
        id: merge
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          git fetch origin master
          git merge --no-commit --no-ff origin/master || true
          
          if git diff --name-only --diff-filter=U | grep -q CHANGELOG.md; then
            echo "has_conflict=true" >> $GITHUB_OUTPUT
          else
            echo "has_conflict=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Python
        if: steps.merge.outputs.has_conflict == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Resolve conflicts
        if: steps.merge.outputs.has_conflict == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Install dependencies
          pip install PyGithub
          
          # Run the resolver script
          python scripts/resolve_changelog_conflicts.py
          
          git merge --abort
          
          # Commit and push the resolved changelog
          git add CHANGELOG.md
          git commit -m "Resolved changelog conflict automatically"
          git push origin HEAD:${{ github.event.pull_request.head.ref }}