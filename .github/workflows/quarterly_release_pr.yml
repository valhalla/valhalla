name: Create a quarterly release PR

on:
  schedule:
    # every first of the month
    - cron: "0 0 1 * *"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  release_pr:
    name: Release PR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      
      - name: Get next tag
        id: get_tag
        run: |
          set -euo pipefail
          latest_tag=$(git describe --tags --abbrev=0)
          new_tag=$(echo "$latest_tag" | awk -F. -v OFS=. '{$3 = $3 + 1; print}')
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Raise PR
        run: |
          set -euo pipefail

          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

          # set the new patch version in valhalla/valhalla.h
          patch_version=$(echo ${{ steps.get_tag.outputs.new_tag }} | rev | cut -c1)
          sed -i "s/^\(#define VALHALLA_VERSION_PATCH \).*/\1${patch_version}/" valhalla/valhalla.h

          # update CHANGELOG.md
          sed -i "0,/^## UNRELEASED/s//## Release Date: $(date +%Y-%m-%d) Valhalla $new_tag/" CHANGELOG.md
          sed -i "1i## UNRELEASED\n* **Removed**\n* **Bug Fix**\n* **Enhancement**\n" CHANGELOG.md

          branch="release-${{ steps.get_tag.outputs.new_tag }}"
          git checkout -B "$branch"
          git add valhalla/valhalla.h CHANGELOG.md
          git commit -m "release version ${{ steps.get_tag.outputs.new_tag }}"
          git push -u origin "$branch"

          gh pr create \
            --title "Release ${{ steps.get_tag.outputs.new_tag }}" \
            --body "Auto-generated release ${{ steps.get_tag.outputs.new_tag }}. May need to elevate to minor release." \
            --base master \
            --head "$branch"
